[{"/home/picard/Documents/Web/event-master/src/index.js":"1","/home/picard/Documents/Web/event-master/src/reportWebVitals.js":"2","/home/picard/Documents/Web/event-master/src/App.js":"3","/home/picard/Documents/Web/event-master/src/firebase/firebase.util.js":"4","/home/picard/Documents/Web/event-master/src/components/assessories/Ended.js":"5","/home/picard/Documents/Web/event-master/src/components/nav/nav.component.jsx":"6","/home/picard/Documents/Web/event-master/src/components/loop-of-code/loop-of-code.component.jsx":"7","/home/picard/Documents/Web/event-master/src/components/registration/registration.component.jsx":"8","/home/picard/Documents/Web/event-master/src/components/design-to-debug/design-to-debug.component.jsx":"9","/home/picard/Documents/Web/event-master/src/pages/homepage/homepage.component.jsx":"10","/home/picard/Documents/Web/event-master/src/components/cards/register-card.js":"11","/home/picard/Documents/Web/event-master/src/components/assessories/NotStarted.js":"12","/home/picard/Documents/Web/event-master/src/components/assessories/Loading.js":"13","/home/picard/Documents/Web/event-master/src/components/sponsors/sponsors.component.jsx":"14","/home/picard/Documents/Web/event-master/src/pages/quiz/quiz.component.jsx":"15","/home/picard/Documents/Web/event-master/src/pages/treasurehunt/treasurehunt.component.jsx":"16","/home/picard/Documents/Web/event-master/src/components/registration-left/registration-left.component.jsx":"17","/home/picard/Documents/Web/event-master/src/components/first-part/first-part.component.jsx":"18","/home/picard/Documents/Web/event-master/src/components/prizes/C.jsx":"19","/home/picard/Documents/Web/event-master/src/components/Footer/footer.component.jsx":"20","/home/picard/Documents/Web/event-master/src/components/event-schedule/event-schedule.component.jsx":"21","/home/picard/Documents/Web/event-master/src/components/speakers/speakers.component.jsx":"22","/home/picard/Documents/Web/event-master/src/pages/quiz/Quiz1.jsx":"23","/home/picard/Documents/Web/event-master/src/components/assessories/Unauthorised.js":"24","/home/picard/Documents/Web/event-master/src/components/cards/quiz-card.js":"25","/home/picard/Documents/Web/event-master/src/pages/quiz/Quiz2.js":"26","/home/picard/Documents/Web/event-master/src/components/cards/treasurehunt-question-popup.jsx":"27","/home/picard/Documents/Web/event-master/src/components/cards/leaderboard-popup.jsx":"28","/home/picard/Documents/Web/event-master/src/components/registration-popup/registration-popup.component.jsx":"29","/home/picard/Documents/Web/event-master/src/components/assessories/TimeUp.js":"30","/home/picard/Documents/Web/event-master/src/components/QuizoPediaRound2/Question.js":"31","/home/picard/Documents/Web/event-master/src/components/Quesopedia-round1/Quesopedia-round1.component.jsx":"32"},{"size":532,"mtime":1614496220000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1614496220000,"results":"35","hashOfConfig":"34"},{"size":3633,"mtime":1614496220000,"results":"36","hashOfConfig":"34"},{"size":1404,"mtime":1614496220000,"results":"37","hashOfConfig":"34"},{"size":1029,"mtime":1614496220000,"results":"38","hashOfConfig":"34"},{"size":1339,"mtime":1614496220000,"results":"39","hashOfConfig":"34"},{"size":9159,"mtime":1614496220000,"results":"40","hashOfConfig":"34"},{"size":6482,"mtime":1614496220000,"results":"41","hashOfConfig":"34"},{"size":11930,"mtime":1614496220000,"results":"42","hashOfConfig":"34"},{"size":2665,"mtime":1614496220000,"results":"43","hashOfConfig":"34"},{"size":757,"mtime":1614496220000,"results":"44","hashOfConfig":"34"},{"size":389,"mtime":1614496220000,"results":"45","hashOfConfig":"34"},{"size":412,"mtime":1614496220000,"results":"46","hashOfConfig":"34"},{"size":7607,"mtime":1614496220000,"results":"47","hashOfConfig":"34"},{"size":2319,"mtime":1614496220000,"results":"48","hashOfConfig":"34"},{"size":7529,"mtime":1614496220000,"results":"49","hashOfConfig":"34"},{"size":9767,"mtime":1614496220000,"results":"50","hashOfConfig":"34"},{"size":1677,"mtime":1614496220000,"results":"51","hashOfConfig":"34"},{"size":1331,"mtime":1614496220000,"results":"52","hashOfConfig":"34"},{"size":2026,"mtime":1614496220000,"results":"53","hashOfConfig":"34"},{"size":6950,"mtime":1614496220000,"results":"54","hashOfConfig":"34"},{"size":1999,"mtime":1614496220000,"results":"55","hashOfConfig":"34"},{"size":5636,"mtime":1614496220000,"results":"56","hashOfConfig":"34"},{"size":383,"mtime":1614496220000,"results":"57","hashOfConfig":"34"},{"size":1076,"mtime":1614496220000,"results":"58","hashOfConfig":"34"},{"size":5823,"mtime":1614496220000,"results":"59","hashOfConfig":"34"},{"size":3092,"mtime":1614496220000,"results":"60","hashOfConfig":"34"},{"size":1353,"mtime":1614496220000,"results":"61","hashOfConfig":"34"},{"size":761,"mtime":1614496220000,"results":"62","hashOfConfig":"34"},{"size":536,"mtime":1614496220000,"results":"63","hashOfConfig":"34"},{"size":4750,"mtime":1614496220000,"results":"64","hashOfConfig":"34"},{"size":4245,"mtime":1614496220000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"5s018r",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},"/home/picard/Documents/Web/event-master/src/index.js",[],["140","141"],"/home/picard/Documents/Web/event-master/src/reportWebVitals.js",[],"/home/picard/Documents/Web/event-master/src/App.js",["142","143"],"import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.util\";\n\nimport Designregister from \"./components/design-to-debug/design-to-debug.component\";\nimport Loopofcode from \"./components/loop-of-code/loop-of-code.component\";\n\nimport Homepage from \"./pages/homepage/homepage.component\";\nimport Nav from \"./components/nav/nav.component\";\n\nimport Registration from \"./components/registration/registration.component\";\nimport { Helmet } from \"react-helmet\";\nimport Ended from \"./components/assessories/Ended\";\n\nclass App extends Component {\n  unsubscribeFromAuth = null;\n\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null,\n      id: null,\n      loading: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.currentUser == null)\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n        if (userAuth) {\n          this.setState({ loading: true });\n          const userRef = await createUserProfileDocument(userAuth);\n          userRef.onSnapshot((snapShot) => {\n            this.setState({\n              id: snapShot.id,\n              currentUser: snapShot.data(),\n              loading: false,\n            });\n          });\n        } else {\n          this.setState({ id: null, currentUser: null });\n        }\n      });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Helmet>\n          <title>Abhiyuthhan</title>\n        </Helmet>\n        <Nav\n          currentUser={this.state.currentUser}\n          loading={this.state.loading}\n          removeuser={this.removeuser}\n        />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Homepage currentUser={this.state.currentUser} />\n          </Route>\n          {this.state.currentUser ? (\n            <div>\n              <Route path=\"/Quiz\">\n                <Registration\n                  event_name=\"Quizopedia\"\n                  eventkey=\"Quizopedia\"\n                  path=\"/Quiz\"\n                  currentUser={this.state.currentUser}\n                  id={this.state.id}\n                />\n                <Helmet>\n                  <title>Quiz-O-Quest</title>\n                </Helmet>\n              </Route>\n              <Route path=\"/Kasa-parabel\">\n                <Registration\n                  event_name=\"Kas Parable\"\n                  eventkey=\"treasure\"\n                  path=\"/Kasa-parabel\"\n                  currentUser={this.state.currentUser}\n                  id={this.state.id}\n                />\n                <Helmet>\n                  <title>Kasparabel</title>\n                </Helmet>\n              </Route>\n              <Route path=\"/design-to-debug\">\n                <Designregister currentUser={this.state.currentUser} />\n                <Helmet>\n                  <title>Design2Debug</title>\n                </Helmet>\n              </Route>\n              <Route path=\"/loop-of-code\">\n                <Loopofcode currentUser={this.state.currentUser} />\n              </Route>\n            </div>\n          ) : (\n            <Route path=\"/\">\n              <Homepage currentUser={this.state.currentUser} />\n            </Route>\n          )}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n/*\n<Route path=\"/Quiz/Quiz1\">\n  <Quiz1/>\n</Route>\n<Route exact path=\"/audio-visual\"><Registration event_name=\"Audio Visual\" path=\"/audio-visual\" currentUser={this.state.currentUser} id={this.state.id} /></Route>\n\n<Route path=\"/Others\">\n  <Others/>  \n</Route>\n*/\n","/home/picard/Documents/Web/event-master/src/firebase/firebase.util.js",[],"/home/picard/Documents/Web/event-master/src/components/assessories/Ended.js",["144","145"],"import React, { Component } from \"react\";\nimport meme from \"../../assets/mp3/meme.mp3\";\nimport \"./assStyle.css\";\nimport { Howl, Howler } from \"howler\";\nclass Ended extends Component {\n  soundPlay = (src) => {\n    const sound = new Howl({\n      src,\n      html5: true,\n      autoplay: true,\n      volume: 1.0,\n      pool: 15,\n    });\n    sound.play();\n  };\n  componentDidMount() {\n    this.soundPlay(meme);\n  }\n\n  render() {\n    return (\n      <div className=\"box-container\">\n        <div className=\"m-box\">\n          <img\n            style={{\n              width: \"100%\",\n              height: \"inherit\",\n              paddingTop: \"0.5rem\",\n              paddingBottom: \"0.5rem\",\n\n              paddingRight: \"0.22rem\",\n              paddingLeft: \"0.22rem\",\n              borderRadius: \"7%\",\n            }}\n            src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fi.ytimg.com%2Fvi%2FwgbidRYab4g%2Fmaxresdefault.jpg&f=1&nofb=1\"\n          ></img>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Ended;\n","/home/picard/Documents/Web/event-master/src/components/nav/nav.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/loop-of-code/loop-of-code.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/registration/registration.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/design-to-debug/design-to-debug.component.jsx",[],"/home/picard/Documents/Web/event-master/src/pages/homepage/homepage.component.jsx",["146"],"import RegistrationCard from '../../components/cards/register-card.js';\nimport Footer from '../../components/Footer/footer.component';\nimport FirstPart from '../../components/first-part/first-part.component'\nimport './homepage.styles.css';\nimport logo from '../../assets/logo.png';\nimport D2D from '../../assets/Design2Debug.jpg';\nimport KP from '../../assets/Kasperable.jpg';\nimport LOC from '../../assets/Loop-of-Codes.jpeg';\nimport QoQ from '../../assets/Quiz-o-quest.jpg';\n\nimport Eventschedule from '../../components/event-schedule/event-schedule.component';\nimport Sponsors from '../../components/sponsors/sponsors.component';\nimport Speakers from '../../components/speakers/speakers.component';\n\nimport Prizes from '../../components/prizes/C';\n\n\n\nconst Homepage=({currentUser,img})=>{\n    return(\n        <div className=\"wrap\">\n          <FirstPart/>\n            <div style={{display: 'flex',flexWrap: 'wrap',justifyContent: 'center'}}>\n                <RegistrationCard path=\"/Quiz\" currentUser={currentUser} img={QoQ} name='Quiz-o-Quest' description='An event, only there to test your aptitude, knowledge and intelligent quotient, giving you a chance to prove your mettle.'/>\n                <RegistrationCard path=\"/Kasa-parabel\" currentUser={currentUser} img={KP} name='KasParable' description='There can be nothing adventurous than solving a quest by decoding clues, one after the other, leading you to an amazing treasure.'/>\n                <RegistrationCard path=\"/design-to-debug\" currentUser={currentUser} img={D2D} name='Design 2 Debug' description='An event, so fulfilled, designed specially to test your designing skills, you got to debug some circuits to be our charming winner.'/>\n                <RegistrationCard path=\"https://www.codingninjas.com/events/ninja-prestige-loop-of-codes-at-nit-patna\" type=\"anotherweb\" img={LOC} currentUser={currentUser} name='Loop of Codes' description='All you need to do is  code hard extending your limits touching sky high and you get to brag yourself as hard-core coder.'/>\n            </div>\n            <Eventschedule/>\n            <Speakers/>\n            <br/>\n            <h1>PRIZES</h1>\n            <br/>\n            <Prizes/>\n            <Sponsors/>\n            <Footer/>\n        </div>\n    )\n}\n\nexport default Homepage;\n/*\n<Link to=\"/Kasa-parabel\" style={{color:\"white\"}}>Link to treasure hunt</Link>\n<Link to=\"/Quiz\" style={{color:\"white\"}}>Link to Quiz</Link>\n<Link to=\"/Kasa-parabel\" style={{color:\"white\"}}>Link to treasure hunt</Link>\n*/\n/*\n<RegistrationCard path=\"/audio-visual\" name='Audio Visual Round'/>\n<RegistrationCard path=\"/Others\" currentUser={currentUser} name='Other Events'/>\n*/\n","/home/picard/Documents/Web/event-master/src/components/cards/register-card.js",[],"/home/picard/Documents/Web/event-master/src/components/assessories/NotStarted.js",[],"/home/picard/Documents/Web/event-master/src/components/assessories/Loading.js",[],"/home/picard/Documents/Web/event-master/src/components/sponsors/sponsors.component.jsx",[],"/home/picard/Documents/Web/event-master/src/pages/quiz/quiz.component.jsx",[],"/home/picard/Documents/Web/event-master/src/pages/treasurehunt/treasurehunt.component.jsx",["147"],"//Update hint and pass to popup\nimport {Component} from 'react';\nimport LeaderboardPopup from '../../components/cards/leaderboard-popup.jsx';\nimport LevelPopup from '../../components/cards/treasurehunt-question-popup.jsx';\nimport Footer from '../../components/Footer/footer.component';\nimport './treasurehunt.styles.css';\n\nlet current_level_no,current_level_question,current_level_img,current_level_completed,current_level_message,current_level_hint,leaderboard_data;\nclass Treasure extends Component {\n    constructor(){\n        super();\n        this.state={\n            current_set_no: 1,\n            total_score: '#',\n            leaderboard_popup: false,\n            level_popup: false\n        }\n    }\n    onLeaderboardClick=()=>{\n        fetch(\"https://eventnitrob.herokuapp.com/treasure/leaderboard\")\n        .then(res=>{\n            if(res.status===500)\n                throw(res.statusText);\n            return(res.json());\n        })\n        .then(data=>{\n            leaderboard_data=data.data;\n            this.toggleLederboardPopup();\n        })\n        .catch(err=>console.log(err));\n    }\n    onLevelClick=(event)=>{\n        current_level_no=Number(event.target.value);\n        fetch(\"https://eventnitrob.herokuapp.com/question/treasure_question\",{\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                set_no: this.state.current_set_no,\n                level_no: current_level_no,\n                user_email: this.props.currentUser.email\n            })\n        })\n        .then(res=>{\n            if(res.status===500)\n                throw(res.statusText);\n            return(res.json());\n        })\n        .then(data=>{\n            current_level_question=data.question;\n            current_level_img=data.img;\n            current_level_completed=data.completed;\n            current_level_hint=data.hint;\n            data.hint='sorry';\n            console.log(data);\n            if(current_level_completed)\n                current_level_message=\"you might proceed to the next level\";\n            else\n                current_level_message=\"complete this level to proceed to next\";\n            this.toggleLevelPopup();\n        })\n        .catch(err=>console.log(err));\n    }\n    toggleLederboardPopup=()=>{\n        this.setState({\n            leaderboard_popup: !this.state.leaderboard_popup\n        })\n    }\n    toggleLevelPopup=()=>{\n        this.setState({\n            level_popup: !this.state.level_popup\n        })\n    }\n    onSetChange=(set_no)=>{\n        this.levelBtnActivate([false,false,false,false,false,false])\n        this.setState({\n            current_set_no: Number(set_no)\n        })\n        fetch(\"https://eventnitrob.herokuapp.com/treasure/user-active-levels\",{\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                set_no: Number(set_no),\n                user_email: this.props.currentUser.email\n            })\n        })\n        .then(res=>{\n            if(res.status===500)\n                throw(res.statusText);\n            return(res.json());\n        })\n        .then(data=>{\n            this.levelBtnActivate(data.active_levels);\n        })\n        .catch(err=>console.log(err));\n    }\n    componentDidMount(){\n        this.setScore();\n        this.levelBtnActivate([true,false,false,false,false,false]);\n        // alert(\"contest ended\");\n        fetch(\"\",{\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                set_no: 1,\n                user_email: this.props.currentUser.email\n            })\n        })\n        .then(res=>{\n            if(res.status===500)\n                throw(res.statusText);\n            return(res.json());\n        })\n        .then(data=>{\n            this.levelBtnActivate(data.active_levels);\n        })\n        .catch(err=>console.log(err));\n    }\n    levelBtnActivate=(active_levels)=>{\n        let level_btn=document.getElementsByClassName(\"level-btn\");\n        for(let i=0;i<level_btn.length;i++){\n            if(active_levels[level_btn[i].value]){\n                level_btn[i].disabled=false;Object.assign(level_btn[i].style,{cursor:\"pointer\",color:\"rgba(255,255,255)\"});\n            }\n            else{\n                level_btn[i].disabled=true;\n                Object.assign(level_btn[i].style,{cursor:\"not-allowed\",color:\"rgba(255,255,255,0.5)\"});\n            }\n        }\n    }\n    setScore=()=>{\n        // alert(\"contest ended\");\n        // fetch(\"https://eventnitrob.herokuapp.com/treasure/get-score\",{\n        //     method: 'post',\n        //     headers: {'Content-Type':'application/json'},\n        //     body: JSON.stringify({\n        //         user_email: this.props.currentUser.email\n        //     })\n        // })\n        // .then(res=>{\n        //     if(res.status===500)\n        //         throw(res.statusText);\n        //     return(res.json());\n        // })\n        // .then(data=>{\n        //     this.setState({\n        //         total_score: data.total_score\n        //     });\n        // })\n        // .catch(err=>console.log(err));\n    }\n    render=()=>{\n        let options=[];\n        for(let i=1;i<=4;i++)\n            options.push(<option key={i} value={i}>{i}</option>);\n        return(\n            <div className=\"treasure-wrap\">\n                <div className=\"user-status\">\n                    <h5>My Score: {this.state.total_score}</h5>\n                    <input className=\"submit-btn\" type=\"submit\" onClick={this.onLeaderboardClick} value=\"Leaderboard\"/>\n                </div>\n                <div className=\"ctn\">\n                    <h5 id=\"set-select\">Set No.{\" \"}\n                        <select id=\"set-no\" onChange={(event)=>this.onSetChange(event.target.value)} value={this.state.current_set_no}>\n                            {options}\n                        </select>\n                    </h5>\n                    <h1 style={{color:'red'}}>Contest Ended</h1>\n                    <div className=\"level-btn-container\">\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='0'>Level 0</button>\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='1'>Level 1</button>\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='2'>Level 2</button>\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='3'>Level 3</button>\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='4'>Level 4</button>\n                        <button className=\"level-btn\" onClick={this.onLevelClick} value='5'>Bonus</button>\n                    </div>\n                </div>\n                <Footer/>\n                {\n                    this.state.leaderboard_popup?\n                    <LeaderboardPopup togglePopup={this.toggleLederboardPopup} data={leaderboard_data}/>:<div></div>\n                }\n                {\n                    this.state.level_popup?\n                    <LevelPopup togglePopup={this.toggleLevelPopup} currentUser={this.props.currentUser} set_no={this.state.current_set_no} level_no={current_level_no} completed={current_level_completed} question={current_level_question} img={current_level_img} message={current_level_message} onSetChange={this.onSetChange} setScore={this.setScore}/>:<div></div>   \n                }\n            </div>\n        );\n    }\n}\n\nexport default Treasure;","/home/picard/Documents/Web/event-master/src/components/registration-left/registration-left.component.jsx",["148"],"// import Countdown from \"../countdown/countdown.component\";\nimport { withRouter } from \"react-router\";\nimport React from \"react\";\nimport Sponsors from \"../sponsors/sponsors.component\";\nimport Timer from \"react-compound-timer\";\nimport moment from \"moment\";\n\nimport RegistrationPopup from \"../registration-popup/registration-popup.component\";\nimport Treasurelogo from \"../../assets/treasure-logo.jpeg\";\nimport Quizlogo from \"../../assets/quiz-logo.png\";\n\nimport \"./registration-left.styles.css\";\n\nconst RegistrationLeft = (props) => {\n  const {\n    currentUser,\n    eventtime,\n    eventstarted,\n    eventended,\n    event_name,\n    path,\n    registered,\n    description,\n    email,\n    handleChange,\n    name,\n    college,\n    year,\n    handlesubmit,\n    togglepopup,\n    popup,\n  } = props;\n  const timez = String(moment(eventtime, \"MM DD YYYY, h:mm a\") - moment.now());\n\n  return (\n    <div>\n      <div className=\"reg-flex-wrap\">\n        <div className=\"reg-flex-left\">\n          <Sponsors />\n        </div>\n        <div className=\"reg-flex-right\">\n          <h1 className=\"reg-heading_h1\" style={{ color: \"white\" }}>\n            {event_name === \"Quizopedia\" ? \"Quiz-o-Quest\" : event_name}\n          </h1>\n          <img\n            className=\"reg-img\"\n            alt=\"treasure\"\n            src={event_name === \"Quizopedia\" ? Quizlogo : Treasurelogo}\n          ></img>\n\n          <div\n            style={{\n              \n              textAlign: \"center\",\n              color: \"white\",\n              justifyContent: \"space-around\",\n              marginTop: \"1rem\",\n            }}\n          >\n            {timez > 0 ? (\n              <Timer  initialTime={timez} direction=\"backward\">\n                {() => (\n                  <React.Fragment>\n                    <div className=\"row justify-content-center mb-2\">\n                      <div className=\"col shadow-lg rounded rounded bg-danger border-2 mx-1 py-2\" style={{textAlign:\"center\",maxWidth:\"max-content\"}}><h5 className=\"my-auto\"><Timer.Days /></h5><p className=\"my-auto\">Days</p></div>\n                      <div className=\"col shadow-lg rounded rounded bg-danger border-2 mx-1 py-2\" style={{textAlign:\"center\",maxWidth:\"max-content\"}}><h5 className=\"my-auto\"><Timer.Hours /></h5><p className=\"my-auto\">Hours</p></div>\n                      <div className=\"col shadow-lg rounded rounded bg-danger border-2 mx-1 py-2\" style={{textAlign:\"center\",maxWidth:\"max-content\"}}><h5 className=\"my-auto\"><Timer.Minutes /></h5><p className=\"my-auto\">Mins</p></div>\n                      <div className=\"col shadow-lg rounded rounded bg-danger border-2 mx-1 py-2\" style={{textAlign:\"center\",maxWidth:\"max-content\"}}><h5 className=\"my-auto\"><Timer.Seconds /></h5><p className=\"my-auto\">Secs</p></div>\n                      \n                      \n                    </div>\n                    \n                  </React.Fragment>\n                )}\n              </Timer>\n            ) : (\n              \"\"\n            )}\n\n            {/* <Countdown className=\"countdown\" timeTillDate={eventtime} timeFormat=\"MM DD YYYY, h:mm a\" /> */}\n\n            {registered === true ? (\n              eventstarted === true ? (\n                <button\n                  className=\"reg-start-btn\"\n                  onClick={togglepopup}\n                >{`Join the event`}</button>\n              ) : (\n                <button\n                  className=\"reg-start-btn\"\n                  style={{ cursor: \"default\" }}\n                  disabled={true}\n                >{`Event Ended it was nice experience`}</button>\n              )\n            ) : (\n              <button\n                className=\"reg-start-btn\"\n                style={{ cursor: \"default\", background: \"red\" }}\n                disabled={true}\n              >\n                {`Please register to the event `}&#8681;\n              </button>\n            )}\n          </div>\n          {registered === false ? (\n            <div style={{ color: \"white\" }}>\n              <form>\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"temail\"\n                  className=\"reg-label\"\n                >\n                  Email id\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"email\"\n                  disabled={true}\n                  id=\"temail\"\n                  value={email}\n                  name=\"email\"\n                  placeholder=\"\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"fname\"\n                  className=\"reg-label\"\n                >\n                  Name\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"name\"\n                  name=\"name\"\n                  onChange={handleChange}\n                  value={name}\n                  placeholder=\"Your Name..\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"year\"\n                  className=\"reg-label\"\n                >\n                  Enter Year\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"year\"\n                  name=\"year\"\n                  onChange={handleChange}\n                  value={year}\n                  placeholder=\"Enter your Year..\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"cname\"\n                  className=\"reg-label\"\n                >\n                  College Name\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"cname\"\n                  name=\"college\"\n                  onChange={handleChange}\n                  value={college}\n                  placeholder=\"Enter your college..\"\n                />\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-submit-btn\"\n                  id=\"dtd-btn\"\n                  onClick={handlesubmit}\n                  type=\"submit\"\n                  value=\"submit\"\n                />\n              </form>\n              {/* <button className=\"registration__register-button\" onClick={onregister}>{`Register to the Event`}</button> */}\n            </div>\n          ) : (\n            <div>\n              <form>\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"temail\"\n                  className=\"reg-label\"\n                >\n                  Email id\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"email\"\n                  disabled={true}\n                  id=\"temail\"\n                  value={currentUser.email}\n                  name=\"email\"\n                  placeholder=\"\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"fname\"\n                  className=\"reg-label\"\n                >\n                  Name\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"name\"\n                  disabled={true}\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"Your Name..\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"year\"\n                  className=\"reg-label\"\n                >\n                  Enter Year\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"year\"\n                  name=\"year\"\n                  disabled={true}\n                  value={year}\n                  placeholder=\"Enter your Year..\"\n                />\n                <label\n                  style={{ color: \"white\" }}\n                  htmlFor=\"cname\"\n                  className=\"reg-label\"\n                >\n                  College Name\n                </label>\n                <input\n                  style={{ color: \"white\" }}\n                  className=\"reg-input\"\n                  type=\"text\"\n                  required\n                  id=\"cname\"\n                  name=\"college\"\n                  disabled={true}\n                  value={college}\n                  placeholder=\"Enter your college..\"\n                />\n                <input\n                  style={{ color: \"white\", cursor: \"not-allowed\" }}\n                  className=\"reg-submit-btn\"\n                  id=\"dtd-btn\"\n                  disabled={true}\n                  type=\"submit\"\n                  value=\"registered\"\n                />\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n      <p>\n        If you facing any problem regarding registration contact :\n        <a href=\"tel:+918707880499\">8707880499</a>(Pawan Singh)\n      </p>\n      {popup === true ? (\n        <RegistrationPopup\n          description={description}\n          togglepopup={togglepopup}\n          path={path}\n        />\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(RegistrationLeft);\n","/home/picard/Documents/Web/event-master/src/components/first-part/first-part.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/prizes/C.jsx",[],"/home/picard/Documents/Web/event-master/src/components/Footer/footer.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/event-schedule/event-schedule.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/speakers/speakers.component.jsx",[],"/home/picard/Documents/Web/event-master/src/pages/quiz/Quiz1.jsx",[],"/home/picard/Documents/Web/event-master/src/components/assessories/Unauthorised.js",[],"/home/picard/Documents/Web/event-master/src/components/cards/quiz-card.js",[],"/home/picard/Documents/Web/event-master/src/pages/quiz/Quiz2.js",["149","150","151","152","153"],"import React, { Component } from \"react\";\nimport { Container, Button, Row, Col } from \"reactstrap\";\nimport Question from \"../../components/QuizoPediaRound2/Question\";\nimport moment from \"moment\";\nimport Ended from \"../../components/assessories/Ended\";\nimport TimeUp from \"../../components/assessories/TimeUp\";\nimport Loading from \"../../components/assessories/Loading\";\nimport { withRouter } from \"react-router-dom\";\nimport { map } from \"jquery\";\n\nclass Quiz2 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      questionnum: 1,\n      question: \"\",\n      qmax: Number(this.props.qmax),\n      timez: 0,\n      submitted: 101,\n      timeup: false,\n    };\n  }\n\n  handleTime = () => {\n    this.setState({ timeup: true });\n    //localStorage.clear();\n    ////console.log(\"submit called\");\n    this.handlesubmit(false);\n  };\n\n  getquestion = () => {\n    fetch(\"https://eventnitrob.herokuapp.com/quizopedia/get-question2\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        questionnum: Number(this.state.questionnum),\n      }),\n    })\n      .then((res) => {\n        if (res.status === 500) throw res.statusText;\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ question: data.message });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  nextquestion = async (counter) => {\n    if (counter > 0) {\n      await localStorage.setItem(`${this.state.questionnum}`, 0);\n    }\n    await this.setState({\n      questionnum:\n        this.state.questionnum < this.props.qmax\n          ? this.state.questionnum + 1\n          : this.state.questionnum,\n    });\n    await this.getquestion();\n  };\n\n  handlesubmit = (isClicked) => {\n    const { history } = this.props;\n\n    const { currentUser } = this.props;\n    fetch(\"https://eventnitrob.herokuapp.com/quizopedia/submit-test2\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: currentUser.email,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 500) throw res.statusText;\n        return res.json();\n      })\n      .then((data) => {\n        this.setState({ timeup: true });\n        sessionStorage.clear();\n        localStorage.clear();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  async componentDidMount() {\n    while (localStorage.getItem(`${this.state.questionnum}`)) {\n      await this.nextquestion();\n    }\n    const { eventended, eventendtime, currentUser } = this.props;\n    await fetch(\"https://eventnitrob.herokuapp.com/quizopedia/check-submit2\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: currentUser.email,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 500) throw res.statusText;\n        return res.json();\n      })\n      .then((data) => {\n        if (data.message === true) {\n          this.setState({ submitted: true });\n        } else {\n          this.setState({\n            timez:\n              (eventendtime, \"MM DD YYYY, h:mm a\") - moment.now() > 0\n                ? String(\n                    moment(eventendtime, \"MM DD YYYY, h:mm a\") - moment.now()\n                  )\n                : 0,\n            submitted: false,\n          });\n          this.getquestion();\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { eventended, eventendtime, currentUser } = this.props;\n    return (\n      <>\n        {this.state.submitted === 101 ? (\n          <Loading />\n        ) : eventended === true || this.state.submitted || this.state.timeup ? (\n          <Ended />\n        ) : (\n          <>\n            <Container\n              className=\"quiz1-container\"\n              style={{ transform: \"translateY(5%)\" }}\n            >\n              <Row>\n                <Col sm=\"12\">\n                  <Question\n                    key={this.state.questionnum}\n                    questionnum={this.state.questionnum}\n                    question={this.state.question}\n                    currentUser={this.props.currentUser}\n                    eventended={eventended}\n                    eventendtime={eventendtime}\n                    nextQuestion={this.nextquestion}\n                    qmax={this.state.qmax}\n                    handleTime={this.handleTime}\n                  />\n                </Col>\n              </Row>\n\n              <Row\n                style={{\n                  justifyContent: \"space-between\",\n                  marginBottom: \"2rem\",\n                }}\n              >\n                <Col xs=\"6\" style={{ alignItems: \"left\" }}>\n                  <Button\n                    className=\"control-btns\"\n                    id=\"prev-btn\"\n                    disabled={this.state.questionnum === 1 ? true : false}\n                    onClick={this.previousquestion}\n                  >\n                    Previous Question\n                  </Button>\n                </Col>\n                <Col xs=\"6\">\n                  <Button\n                    className=\"control-btns\"\n                    id=\"next-btn\"\n                    disabled={\n                      this.state.questionnum === Number(this.state.qmax)\n                        ? true\n                        : false\n                    }\n                    onClick={() => this.nextquestion(1)}\n                  >\n                    Next Question\n                  </Button>\n                </Col>\n              </Row>\n              <Button\n                className=\"submit-button\"\n                onClick={() => this.handlesubmit(true)}\n              >\n                Submit the test\n              </Button>\n            </Container>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Quiz2);\n","/home/picard/Documents/Web/event-master/src/components/cards/treasurehunt-question-popup.jsx",[],"/home/picard/Documents/Web/event-master/src/components/cards/leaderboard-popup.jsx",[],"/home/picard/Documents/Web/event-master/src/components/registration-popup/registration-popup.component.jsx",[],"/home/picard/Documents/Web/event-master/src/components/assessories/TimeUp.js",["154"],"import React from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nfunction TimeUp(props) {\n  return (\n    <div className=\"box-container\">\n      <div className=\"m-box\">\n        <div className=\"cont\">\n          <i className=\"fas fa-hourglass-end fa-3x mt-4 switch\"></i>\n          <h3 className=\"my-3 switch\">\n            Time's Up! <br /> Thank You for attempting!\n            {setTimeout(props.history.push(\"/\"), 3000)}\n          </h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(TimeUp);\n","/home/picard/Documents/Web/event-master/src/components/QuizoPediaRound2/Question.js",["155","156"],"import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport { Howl, Howler } from \"howler\";\n//import demo from \"../../assets/demo.jpg\";\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      select: \"\",\n      innerWidth: window.innerWidth,\n      counter: localStorage.getItem(`${this.props.questionnum}`)\n        ? localStorage.getItem(`${this.props.questionnum}`)\n        : 60,\n    };\n    const interval = 0;\n  }\n  soundPlay = (src) => {\n    const sound = new Howl({\n      src,\n      html5: true,\n      autoplay: true,\n      volume: 1.0,\n      pool: 10,\n    });\n    sound.play();\n  };\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      if (this.state.counter > 0) {\n        this.setState({ counter: this.state.counter - 1 });\n        //this.props.passCounter(this.state.counter);\n      } else if (this.state.counter === 0) {\n        if (this.props.questionnum === this.props.qmax) {\n          this.props.handleTime();\n        } else {\n          localStorage.setItem(`${this.props.questionnum}`, this.state.counter);\n          this.props.nextQuestion(0);\n        }\n      }\n    }, 1000);\n    if (this.state.counter > 0) {\n      setTimeout(\n        () => this.soundPlay(`/assets/mp3/${this.props.question.sound}`),\n        2000\n      );\n    }\n    const questionnum = this.props.questionnum;\n    if (sessionStorage.getItem(`${questionnum}`))\n      document.getElementById(\n        sessionStorage.getItem(`${questionnum}`)\n      ).checked = true;\n  }\n\n  componentWillUnmount() {\n    Howler.stop();\n    clearInterval(this.interval);\n  }\n\n  handlechange = (event) => {\n    const email = this.props.currentUser.email;\n    const questionnum = this.props.questionnum;\n    const { id, name, value } = event.target;\n    sessionStorage.setItem(`${questionnum}`, String(id));\n    fetch(\"https://eventnitrob.herokuapp.com/quizopedia/submit-question2\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: email,\n        questionnum: questionnum,\n        answer: value,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 500) throw res.statusText;\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { question, questionnum } = this.props;\n    const styles = {\n      maxWidth: this.state.innerWidth < 1024 ? \"\" : \"min-content\",\n      maxHeight: \"50vh\",\n      margin: \"auto\",\n    };\n    return (\n      <>\n        <Row>\n          <img\n            src={process.env.PUBLIC_URL + `/assets/images/${question.pic}`}\n            alt={`${question.pic}`}\n            style={styles}\n          />\n        </Row>\n        <div>Time left : {this.state.counter}</div>\n        <Row className=\"question-title\">\n          <Col sm=\"12\" style={{ lineHeight: \"1.5\" }}>\n            <span>Q{questionnum}. </span>\n            <span>{question.question}</span>\n          </Col>\n        </Row>\n        {/* </div> */}\n        <form action=\"\" className=\"options\">\n          <Row>\n            <Col xs=\"12\">\n              <input\n                id=\"option1\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option1}\n              ></input>\n              <span>1.</span>\n              <label for=\"option1\">{question.option1}</label>\n              <br />\n            </Col>\n            <Col xs=\"12\">\n              <input\n                id=\"option2\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option2}\n              ></input>\n              <span>2.</span>\n              <label for=\"option2\">{question.option2}</label>\n              <br />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\">\n              <input\n                id=\"option3\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option3}\n              ></input>\n              <span>3.</span>\n              <label for=\"option3\">{question.option3}</label>\n              <br />\n            </Col>\n            <Col xs=\"12\">\n              <input\n                id=\"option4\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option4}\n              ></input>\n              <span>4.</span>\n              <label for=\"option4\">{question.option4}</label>\n              <br />\n            </Col>\n          </Row>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Question;\n","/home/picard/Documents/Web/event-master/src/components/Quesopedia-round1/Quesopedia-round1.component.jsx",["157","158","159","160"],"import React from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport \"./Quesopedia-round.styles.css\";\n\nclass Question extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      select: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const questionnum = this.props.questionnum;\n    if (sessionStorage.getItem(`${questionnum}`))\n      document.getElementById(\n        sessionStorage.getItem(`${questionnum}`)\n      ).checked = true;\n  }\n\n  handlechange = (event) => {\n    const email = this.props.currentUser.email;\n    const questionnum = this.props.questionnum;\n    const { id, name, value } = event.target;\n    sessionStorage.setItem(`${questionnum}`, String(id));\n    fetch(\"https://eventnitrob.herokuapp.com/quizopedia/submit-question\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: email,\n        questionnum: questionnum,\n        answer: value,\n      }),\n    })\n      .then((res) => {\n        if (res.status === 500) throw res.statusText;\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const {\n      eventended,\n      eventendtime,\n      currentUser,\n      question,\n      questionnum,\n    } = this.props;\n    return (\n      <div>\n        {/* <div */}\n        <Row className=\"question-title\">\n          <Col sm=\"12\" style={{ lineHeight: \"1.5\" }}>\n            <span>Q{questionnum}. </span>\n            <span>{question.question}</span>\n          </Col>\n        </Row>\n        {/* </div> */}\n        <form action=\"\" className=\"options\">\n          <Row>\n            <Col xs=\"12\">\n              <input\n                id=\"option1\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option1}\n              ></input>\n              <span>1.</span>\n              <label for=\"option1\">{question.option1}</label>\n              <br />\n            </Col>\n            <Col xs=\"12\">\n              <input\n                id=\"option2\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option2}\n              ></input>\n              <span>2.</span>\n              <label for=\"option2\">{question.option2}</label>\n              <br />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col xs=\"12\">\n              <input\n                id=\"option3\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option3}\n              ></input>\n              <span>3.</span>\n              <label for=\"option3\">{question.option3}</label>\n              <br />\n            </Col>\n            <Col xs=\"12\">\n              <input\n                id=\"option4\"\n                type=\"radio\"\n                name=\"select\"\n                onClick={this.handlechange}\n                value={question.option4}\n              ></input>\n              <span>4.</span>\n              <label for=\"option4\">{question.option4}</label>\n              <br />\n            </Col>\n          </Row>\n          {/* <input id=\"option1\" type=\"radio\" name=\"select\" onClick={this.handlechange} value={question.option1}></input>\n                    <span>1.</span>\n                    <label for=\"option1\">{question.option1}</label><br/> */}\n          {/* <input id=\"option2\" type=\"radio\" name=\"select\" onClick={this.handlechange} value={question.option2}></input>\n                    <span>2.</span>\n                    <label for=\"option2\">{question.option2}</label><br/> */}\n          {/* <input id=\"option3\" type=\"radio\" name=\"select\" onClick={this.handlechange} value={question.option3}></input>\n                    <span>3.</span>\n                    <label for=\"option3\">{question.option3}</label><br/> */}\n          {/* <input id=\"option4\" type=\"radio\" name=\"select\" onClick={this.handlechange} value={question.option4}></input>\n                    <span>4.</span>\n                    <label for=\"option4\">{question.option4}</label><br/> */}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Question;\n",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":25,"nodeType":"167","messageId":"168","endLine":3,"endColumn":33},{"ruleId":"165","severity":1,"message":"169","line":14,"column":8,"nodeType":"167","messageId":"168","endLine":14,"endColumn":13},{"ruleId":"165","severity":1,"message":"170","line":4,"column":16,"nodeType":"167","messageId":"168","endLine":4,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":24,"column":11,"nodeType":"173","endLine":36,"endColumn":12},{"ruleId":"165","severity":1,"message":"174","line":5,"column":8,"nodeType":"167","messageId":"168","endLine":5,"endColumn":12},{"ruleId":"165","severity":1,"message":"175","line":52,"column":13,"nodeType":"167","messageId":"168","endLine":52,"endColumn":31},{"ruleId":"165","severity":1,"message":"176","line":19,"column":5,"nodeType":"167","messageId":"168","endLine":19,"endColumn":15},{"ruleId":"165","severity":1,"message":"177","line":6,"column":8,"nodeType":"167","messageId":"168","endLine":6,"endColumn":14},{"ruleId":"165","severity":1,"message":"178","line":9,"column":10,"nodeType":"167","messageId":"168","endLine":9,"endColumn":13},{"ruleId":"165","severity":1,"message":"179","line":63,"column":13,"nodeType":"167","messageId":"168","endLine":63,"endColumn":20},{"ruleId":"165","severity":1,"message":"176","line":89,"column":13,"nodeType":"167","messageId":"168","endLine":89,"endColumn":23},{"ruleId":"165","severity":1,"message":"180","line":121,"column":39,"nodeType":"167","messageId":"168","endLine":121,"endColumn":50},{"ruleId":"165","severity":1,"message":"166","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":18},{"ruleId":"165","severity":1,"message":"181","line":16,"column":11,"nodeType":"167","messageId":"168","endLine":16,"endColumn":19},{"ruleId":"165","severity":1,"message":"182","line":64,"column":17,"nodeType":"167","messageId":"168","endLine":64,"endColumn":21},{"ruleId":"165","severity":1,"message":"182","line":24,"column":17,"nodeType":"167","messageId":"168","endLine":24,"endColumn":21},{"ruleId":"165","severity":1,"message":"176","line":47,"column":7,"nodeType":"167","messageId":"168","endLine":47,"endColumn":17},{"ruleId":"165","severity":1,"message":"183","line":48,"column":7,"nodeType":"167","messageId":"168","endLine":48,"endColumn":19},{"ruleId":"165","severity":1,"message":"180","line":49,"column":7,"nodeType":"167","messageId":"168","endLine":49,"endColumn":18},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Ended' is defined but never used.","'Howler' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'logo' is defined but never used.","'current_level_hint' is assigned a value but never used.","'eventended' is assigned a value but never used.","'TimeUp' is defined but never used.","'map' is defined but never used.","'history' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'interval' is assigned a value but never used.","'name' is assigned a value but never used.","'eventendtime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]